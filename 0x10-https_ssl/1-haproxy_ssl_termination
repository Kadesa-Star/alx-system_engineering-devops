#!/usr/bin/env bash
# Bash script to configure HAProxy for SSL termination

# Check if at least one argument is provided
if [ $# -lt 1 ]; then
  echo "Usage: $0 domain [subdomain1 subdomain2 ...]"
  exit 1
fi

# Set domain name
domain="$1"

# Set subdomains to query
subdomains=("www" "lb-01" "web-01" "web-02")

# If additional subdomains are provided as arguments, add them to the subdomains array
if [ $# -gt 1 ]; then
  subdomains+=("${@:2}")
fi

# HAProxy config file path
haproxy_cfg="/etc/haproxy/haproxy.cfg"

# Function to update HAProxy configuration
update_haproxy_config() {
  cat > "$haproxy_cfg" <<EOF
global
	log /dev/log local0
	log /dev/log local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Max connections
	maxconn 2048
	# Configure max size of temporary DHE keys that are generated
	tune.ssl.default-dh-param 2048

	# Default SSL material locations
	ca-base /etc/haproxy/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        # Ensure forwarded request includes client's IP
	option forwardfor
	# Reduce latency between HAProxy and users by closing conns
	option http-server-close
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/hapro
